buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        mavenLocal()
        maven { url 'https://repo.grails.org/grails/core' }
    }
    dependencies {        
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath 'com.bertramlabs.plugins:asset-pipeline-gradle:2.5.0'
		classpath 'org.grails.plugins:hibernate:4.3.10.7'
        classpath 'org.grails.plugins:database-migration:2.0.0.RC1'
		// classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.2.8.RELEASE'
    }
}

plugins {
    id 'io.spring.dependency-management' version '0.5.6.RELEASE'
}

version '1.0'
group 'cces'

apply plugin: 'spring-boot'
apply plugin: 'war'
apply plugin: 'asset-pipeline'
apply plugin: 'org.grails.grails-web'
apply plugin: 'org.grails.grails-gsp'
apply plugin: 'eclipse'

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
}

assets {
    minifyJs = true
    minifyCss = true
}

repositories {
    mavenLocal()
    maven { url 'https://repo.grails.org/grails/core' }
    // maven { url 'http://m2repo.spockframework.org/ext/' }
    // maven { url 'http://m2repo.spockframework.org/snapshots/' }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {
     // , {
    //  [
    //      'jcl-over-slf4j',
    //      'jul-to-slf4j',
    //      'log4j-over-slf4j'
    //  ].each {
    //      exclude module: it
    //  }
    // }
    provided 'org.springframework.boot:spring-boot-starter-logging'
    provided 'org.springframework.boot:spring-boot-starter-actuator'
    provided 'org.springframework.boot:spring-boot-autoconfigure'
    provided 'org.springframework.boot:spring-boot-starter-tomcat'
    provided 'org.grails:grails-dependencies'
    provided 'org.grails:grails-web-boot'

    provided 'org.grails.plugins:hibernate'
    provided 'org.grails.plugins:cache'
    provided 'org.grails.plugins:fields:2.1.2'
    provided 'org.hibernate:hibernate-ehcache'
	provided 'net.sf.ehcache:ehcache:2.9.0'
    // provided 'org.grails.plugins:scaffolding'
    // compile 'org.springframework.boot:spring-security-csrf-token-filter'
    // compile 'commons-beanutils:commons-beanutils:1.9.2'
    // // compile 'commons-beanutils:commons-beanutils'
    provided 'org.springframework.boot:spring-boot-starter-security' // , { // starter-v1.2.8 with security-v3.2.9
//      [   // common:
//          'aopalliance',
//          'commons-logging',
//          'fest-assert',
//          'hsqldb',
//          // TEST: 
//          'jcl-over-slf4j',
//          'junit',
//          'logback-classic',
//          'mockito-core',
//          'powermock-api-mockito',
//          'powermock-api-support',
//          'powermock-core',
//          'powermock-module-junit4',
//          'powermock-module-junit4-common',
//          'powermock-reflect',
//          'spring-beans',
//          'spring-context',
//          'spring-core',
//          'spring-expression',
//          'spring-jdbc',
//          'spring-test',
//          'spring-tx',
//          // -core:
//          'aspectjrt',
//          'commons-collections',
//          'ehcache-core',
//          'jsr250-api',
//          'spring-aop',
//          // -web:
//          'commons-codec',
//          'groovy-all',
//          'javax.servlet-api',
//          'spock-core',
//          'spock-spring',
// //           'spring-security-core',
//          'spring-web',
//          'spring-webmvc'
//      ].each {
//          exclude module: it
//      }
//  }


//  compile('org.grails:gorm-hibernate4-spring-boot:1.1.0.RELEASE') {
//      exclude module: 'spring-boot-cli'
//      exclude module: 'spring-boot-autoconfigure'
//      exclude module: 'groovy-all'
//      exclude module: 'grails-datastore-gorm-hibernate4'
//  }

//  compile 'org.apache.commons:commons-lang3:3.3.2'

    //compile 'org.grails.plugins:joda-time:2.0.0-SNAPSHOT'
//  compile 'joda-time:joda-time:2.9.1'
//  compile ('joda-time:joda-time-hibernate:1.4') {
//      exclude module: 'hibernate-entitymanager'
//  }
//  compile 'org.jadira.usertype:usertype.jodatime:1.9'
//  compile 'org.jadira.usertype:usertype.core:3.2.0.GA'

    console 'org.grails:grails-console'
    runtime 'org.grails.plugins:grails-console:2.0.4'
    runtime 'org.grails.plugins:asset-pipeline'
    runtime 'mysql:mysql-connector-java:5.1.33'
	runtime 'org.grails.plugins:database-migration:2.0.0.RC1'
	// runtime 'org.liquibase:liquibase-core:3.3.2'
	// runtime 'org.liquibase:liquibase-core:3.4.2'

    testCompile 'org.grails:grails-plugin-testing'
    testCompile 'org.grails.plugins:geb'

    // Note: It is recommended to update to a more robust driver (Chrome, Firefox etc.)
    // testRuntime 'org.seleniumhq.selenium:selenium-htmlunit-driver:2.44.0'
    testRuntime 'org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1'
}

configurations {
	provided
//	compile.exclude module: 'commons-lang'
//	runtime.exclude module: 'slf4j-jcl'
//	runtime.exclude module: 'jcl-over-slf4j'
//  runtime.exclude group: 'org.slf4j', module: 'slf4j-log4j12'
//	runtime {
//		exclude group: 'org.grails', module: 'commons-logging'
//		exclude group: 'org.grails', module: 'jcl-over-slf4j'
//	}
// 	runtime {
// 		exclude module: 'commons-logging'
// 		exclude module: 'jcl-over-slf4j'
// //		exclude module: 'jul-to-slf4j'
// //		exclude module: 'log4j-over-slf4j'
// 	}
}

sourceSets {
    main {
        compileClasspath += configurations.provided
        // resources {
        //     srcDir 'grails-app/migrations'
        // }
    }
}

bootRepackage {
    mainClass = 'com.lch.aaa.Application'
}

task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}

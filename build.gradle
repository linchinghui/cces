buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        // maven { url 'https://plugins.gradle.org/m2/' }
        mavenLocal()
        maven { url 'https://repo.grails.org/grails/core' }
        // maven { url 'https://repo.grails.org/grails/plugins' }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        // classpath 'org.grails.plugins:hibernate4:5.0.8'
		// classpath 'org.grails.plugins:views-gradle:1.0.12'

		// classpath 'com.bertramlabs.plugins:asset-pipeline-gradle:2.8.2'
		classpath 'com.bertramlabs.plugins:asset-pipeline-gradle:2.9.5' // 2.9.1
        classpath 'org.grails.plugins:database-migration:2.0.0.RC4'
    }
}

version '1.4.3'
group 'cces'

apply plugin: 'war'
apply plugin: 'org.grails.grails-web'
apply plugin: 'org.grails.grails-gsp'
// apply plugin: 'org.grails.plugins.views-json'
// apply plugin: 'com.bertramlabs.asset-pipeline'
apply plugin: 'asset-pipeline'
apply plugin: 'eclipse'
apply plugin: 'idea'

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
}

repositories {
    mavenLocal()
    maven { url 'https://repo.grails.org/grails/core' }
    // maven { url 'http://m2repo.spockframework.org/ext/' }
    // maven { url 'http://m2repo.spockframework.org/snapshots/' }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
	// dependencies {
	// }
    applyMavenExclusions false
}

dependencies {
	profile 'org.grails.profiles:web' //o=:3.1.8

	compile fileTree (dir: 'grails-app/lib', includes: ['*.jar'])
    compile 'org.springframework.boot:spring-boot-starter-logging', {
        [
            // 'jcl-over-slf4j',
            // 'jul-to-slf4j',
            // 'log4j-over-slf4j'
        ].each {
            exclude module: it
        }
    }
    compile 'org.springframework.boot:spring-boot-autoconfigure', {
        [
            // 'commons-logging'
        ].each {
            exclude module: it
        }
    }
    compile 'org.grails:grails-core'
    // compile 'org.springframework.boot:spring-boot-starter-actuator'

    // provided 'org.springframework.boot:spring-boot-starter-tomcat'
	provided 'org.springframework.boot:spring-boot-starter-jetty'
	compile 'javax.el:javax.el-api:2.2.5'
	// compile 'javax.servlet:javax.servlet-api:3.1.0'

    compile 'org.grails:grails-dependencies', {
        [
        ].each {
            exclude module: it
        }
    }
    compile 'org.grails:grails-web-boot'
	// compile 'org.grails:grails-logging'
    compile 'org.grails.plugins:cache'
    // compile 'org.grails.plugins:scaffolding'
    compile 'org.grails.plugins:hibernate4'
    compile 'org.hibernate:hibernate-ehcache'
	// for NoSuchMethodError: org.springframework.cache.ehcache.EhCacheFactoryBean.setMaxEntriesLocalHeap
    compile 'net.sf.ehcache:ehcache:2.10.3' // 2.9.0
	compile 'org.grails:grails-plugin-rest'
	compile 'org.grails.plugins:fields:2.1.3' // 2.1.2
	// compile 'org.springframework.boot:spring-security-csrf-token-filter'
    compile 'org.springframework.boot:spring-boot-starter-security', { //o=:1.2.8.RELEASE, 1.3.5.RELEASE
	    [   // // common:
	        // 'aopalliance',
	        // 'commons-logging',
            // // 'fest-assert',
            // // 'hsqldb',
            // // // TEST:
			// 'jcl-over-slf4j',
            // 'jul-to-slf4j',
            // 'log4j-over-slf4j',
			// 'ant-junit',
            // 'junit',
            // // 'logback-classic',
            // // 'mockito-core',
            // // 'powermock-api-mockito',
            // // 'powermock-api-support',
            // // 'powermock-core',
            // // 'powermock-module-junit4',
            // // 'powermock-module-junit4-common',
            // // 'powermock-reflect',
            // // 'spock-core',
            // // 'spock-spring',
            // // // -core:
	        // 'aspectjrt',
			// 'aspectjweaver',
			// 'spring-aspects',
            // // 'commons-collections',
            // // 'ehcache-core',
            // // 'jsr250-api',
            // // // -web:
            // // 'commons-codec',
            // // 'groovy-all',
	        // 'javax.servlet-api'
        ].each {
            exclude module: it
        }
    }
	compile 'org.springframework.boot:spring-boot-starter-remote-shell:1.3.8.RELEASE' // 1.3.7
	// compile 'org.crashub:crash.connectors.web:1.3.2'
	// compile 'org.grails.plugins:grails-spring-websocket:2.3.0'
	compile 'commons-fileupload:commons-fileupload:1.3.2'
	console 'org.grails:grails-console', {
		[
			// 'commons-logging'
		].each {
			exclude module: it
		}
	}
	// ----- for plug-in creation -----
	// compile 'com.bertramlabs.plugins:asset-pipeline-core:2.8.2'
	// runtime 'org.grails.plugins:asset-pipeline:3.2.1'
	runtime 'com.bertramlabs.plugins:asset-pipeline-grails:2.9.5' //2.9.1
	// assets 'com.bertramlabs.plugins:less-asset-pipeline:2.8.2'
	// assets 'com.bertramlabs.plugins:sass-asset-pipeline:2.8.2'

    runtime 'mysql:mysql-connector-java:5.1.40' // 5.1.39
	runtime 'org.grails.plugins:database-migration:2.0.0.RC4'

	runtime 'org.grails.plugins:grails-console:2.0.8' //2.0.6
	// provided 'com.h2database:h2'

	// testCompile 'org.grails.plugins:geb'
	// testCompile 'org.grails:grails-datastore-rest-client'
    // testCompile 'org.grails:grails-plugin-testing', {
    //     [
    //     ].each {
    //         exclude module: it
    //     }
    // }
    // testRuntime 'org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1'
    // testRuntime 'net.sourceforge.htmlunit:htmlunit:2.18'
}

task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}

configurations {
	compile.exclude module: 'spring-boot-starter-tomcat'

	all {
		exclude group: 'net.minidev', module: 'asm'
		exclude module: 'log4j-over-slf4j'
		exclude module: 'ant-junit'
		exclude module: 'groovy-groovydoc'

		// exclude module: 'jetty-security'
		// exclude module: 'websocket-api'
		exclude module: 'websocket-server'

		exclude module: 'javax-websocket-client-impl'
		exclude module: 'javax-websocket-server-impl'
		exclude module: 'websocket-client'
		exclude module: 'websocket-common'
		exclude module: 'websocket-servlet'

		// exclude module: 'tomcat-juli'
		// exclude module: 'tomcat-jdbc'
		// exclude module: 'jul-to-slf4j'
		// exclude module: 'commons-logging'
		// exclude module: 'jboss-logging'

		// used by Tomcat, should not be excluded
		exclude module: 'jcl-over-slf4j'
		exclude module: 'tomcat-embed-logging-log4j'
	}
	// war {
	// 	exclude module: 'grails-console'
	// 	exclude module: 'h2'
	// }
}

assets {
	developmentRuntime = System.properties['grails.env']?.startsWith('dev') ? true : false
	// developmentRuntime = true  // dir: assets/
	// developmentRuntime = false // dir: WEB-INF/classes/assets/
	// enableSourceMaps = false
// enableDigests = true
// skipNonDigests = false
// // skipNonDigests = true
// // enableGzip = true
// enableGzip = false
//
// configOptions = [:]
	minifyOptions = [
		// optimizationLevel: 'SIMPLE',
		excludes: ['**/*.map', '**/*.unminified.js', '**/*.less', '**/iefix']
	]
//
// excludes = ['**/*.unminified.js', '**/*.less', '**/iefix']
// // from '/var/www/cces/assets'
}

processResources {
	exclude '**/*.map'
	exclude '**/*.unminified.js'
	exclude '**/*.less'
	exclude '**/iefix'
}
// ----- for plug-in creation -----
// 	sourceSets {
// 		main {
// 			compileClasspath += configurations.provided
// 		}
// 	}

// jar {
// 	exclude(['assets/**/*.unminified.js', 'WEB-INF/lib-provided'])
// }

// war {
// 	exclude 'assets/**/*.unminified.js'
// 	exclude 'WEB-INF/lib-provided'
// }

bootRepackage {
    mainClass = 'com.lch.aaa.Application'
	// enabled = false
	// withJarTask = jar
}
